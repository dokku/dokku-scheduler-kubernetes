#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/property-functions"
source "$PLUGIN_AVAILABLE_PATH/scheduler-kubernetes/internal-functions"

scheduler-kubernetes-scheduler-stop() {
  declare desc="scheduler-kubernetes scheduler-stop plugin trigger"
  declare trigger="scheduler-kubernetes scheduler-stop"
  declare DOKKU_SCHEDULER="$1" APP="$2" REMOVE_CONTAINERS="$3"
  local KUBE_ARGS NAMESPACE

  if [[ "$DOKKU_SCHEDULER" != "kubernetes" ]]; then
    return
  fi

  export KUBECONFIG="${DOKKU_ROOT}/.kube/config"
  export KUBEDOG_KUBE_CONFIG="${DOKKU_ROOT}/.kube/config"
  KUBE_ARGS=()
  NAMESPACE="$(fn-plugin-property-get "scheduler-kubernetes" "$APP" "namespace" "default")"
  KUBE_ARGS+=("--namespace=$NAMESPACE")
  fn-scheduler-kubernetes-ensure-namespace "$NAMESPACE" >/dev/null

  while read -r line || [[ -n "$line" ]]; do
    [[ "$line" =~ ^#.* ]] && continue
    line="$(strip_inline_comments "$line")"
    PROC_TYPE=${line%%=*}
    PROC_COUNT=${line#*=}

    if "${DOKKU_LIB_ROOT}/data/scheduler-kubernetes/kubectl" get deployment "${APP}-${PROC_TYPE}" 2>/dev/null; then
      "${DOKKU_LIB_ROOT}/data/scheduler-kubernetes/kubectl" "${KUBE_ARGS[@]}" scale --replicas=0 "deployment/${APP}-${PROC_TYPE}"
    fi
  done < <(plugn trigger ps-current-scale "$APP")
}

scheduler-kubernetes-scheduler-stop "$@"
